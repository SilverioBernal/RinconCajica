@model Orkidea.RinconCajica.webFront.Models.vmCorrespondenceOut

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutQA.cshtml";
}

@Scripts.Render("~/scripts/jquery-1.9.1.min.js")

@using (Html.BeginForm("Create", "CorrespondenceOut", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <h2>Sistema de mensajeria - Envío de correspondencia</h2>

    @Html.ValidationSummary(true)


    <div class="row-fluid">
        <label class="span12">Dependencia origen <span style="color: red; display: none;">Requerido</span></label>
        @Html.DropDownListFor(model => model.origen, new SelectList(Enumerable.Empty<SelectListItem>()), " ", new { @class = "form-control required", style = "max-width:100%" })
    </div>
    <div class="row-fluid">
        <label class="span12">Dependencia destino</label>
        @Html.DropDownListFor(model => model.destino, new SelectList(Enumerable.Empty<SelectListItem>()), " ", new { @class = "form-control", style = "max-width:100%" })
    </div>
    <div class="row-fluid">
        <label class="span12">Destinatario</label>
        @Html.TextBoxFor(c => c.destinatario, new { @class = "span12" })
    </div>
    <div class="row-fluid">
        <label class="span12">Dirección <span style="color: red; display: none;">Requerido</span></label>
        @Html.TextBoxFor(c => c.direccion, new { @class = "span12 required" })
    </div>
    <div class="row-fluid">
        <label class="span12">Tipo de documento <span style="color: red; display: none;">Requerido</span></label>
        @Html.DropDownListFor(model => model.tipoDocumento, new SelectList(Enumerable.Empty<SelectListItem>()), " ", new { @class = "form-control required", style = "max-width:100%" })
    </div>
    <div class="row-fluid">
        @Html.TextBoxFor(m => m.File, new { type = "file", @class = "btn btn-primary", title = "Seleccione el archivo" })
        <span style="color: red; display: none;" id="fileValidator">Requerido</span>
    </div>
    <br />
    <p>
        <input type="submit" value="Guardar registro" class="btn btn-success" id="btnGuardar" />
    </p>

}

<!-- plupload and all it's runtimes and the jQuery queue widget (attachments) -->
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script src="http://google-code-prettify.googlecode.com/svn/trunk/src/prettify.js"></script>

<script>
    //<![CDATA[
    $(function () {
        $.fn.bootstrapFileInput = function () {
            this.each(function (i, elem) {
                var $elem = $(elem); if (typeof $elem.attr('data-bfi-disabled') != 'undefined') { return; }
                var buttonWord = 'Browse'; if (typeof $elem.attr('title') != 'undefined') { buttonWord = $elem.attr('title'); }
                var className = ''; if (!!$elem.attr('class')) { className = ' ' + $elem.attr('class'); }
                $elem.wrap('<a class="file-input-wrapper btn btn-default ' + className + '"></a>').parent().prepend(buttonWord);
            }).promise().done(function () {
                $('.file-input-wrapper').mousemove(function (cursor) { var input, wrapper, wrapperX, wrapperY, inputWidth, inputHeight, cursorX, cursorY; wrapper = $(this); input = wrapper.find("input"); wrapperX = wrapper.offset().left; wrapperY = wrapper.offset().top; inputWidth = input.width(); inputHeight = input.height(); cursorX = cursor.pageX; cursorY = cursor.pageY; moveInputX = cursorX - wrapperX - inputWidth + 20; moveInputY = cursorY - wrapperY - (inputHeight / 2); input.css({ left: moveInputX, top: moveInputY }); }); $('body').on('change', '.file-input-wrapper input[type=file]', function () {
                    var fileName; fileName = $(this).val(); $(this).parent().next('.file-input-name').remove(); if (!!$(this).prop('files') && $(this).prop('files').length > 1) { fileName = $(this)[0].files.length + ' files'; }
                    else { fileName = fileName.substring(fileName.lastIndexOf('\\') + 1, fileName.length); }
                    $(this).parent().after('<span class="file-input-name">' + fileName + '</span>');
                });
            });
        }; var cssHtml = '<style>' + '.file-input-wrapper { overflow: hidden; position: relative; cursor: pointer; z-index: 1; }' + '.file-input-wrapper input[type=file], .file-input-wrapper input[type=file]:focus, .file-input-wrapper input[type=file]:hover { position: absolute; top: 0; left: 0; cursor: pointer; opacity: 0; filter: alpha(opacity=0); z-index: 99; outline: 0; }' + '.file-input-name { margin-left: 8px; }' + '</style>'; $('link[rel=stylesheet]').eq(0).before(cssHtml);
    });
    //]]></script>
<script>$(document).ready(function () { $('input[type=file]').bootstrapFileInput(); });</script>




<script>
    $(document).ready(function () {
        var dependencia = $("#origen");
        var remitente = $("#destino");
        var tipoDocumento = $("#tipoDocumento");

        remitente.empty();
        dependencia.empty();
        tipoDocumento.empty();

        remitente.append(
                $('<option/>', {
                    value: ''
                }).html('')
            );

        dependencia.append(
                    $('<option/>', {
                        value: ''
                    }).html('')
                );

        tipoDocumento.append(
                    $('<option/>', {
                        value: ''
                    }).html('')
                );

        $.getJSON('@Url.Action("GetAsyncSuppliers", "Supplier")', function (result) {
            $(result).each(function () {
                remitente.append(
                    $('<option/>', {
                        value: this.id
                    }).html(this.nombre)
                );
            });
        });


        $.getJSON('@Url.Action("GetAsyncDependences", "Dependence")', function (result) {
            $(result).each(function () {
                dependencia.append(
                    $('<option/>', {
                        value: this.id
                    }).html(this.nombre)
                );
            });
        });

        $.getJSON('@Url.Action("GetAsyncDocumentType")', function (result) {
            $(result).each(function () {
                tipoDocumento.append(
                    $('<option/>', {
                        value: this
                    }).html(this)
                );
            });
        });
    });

    $('#btnGuardar').click(function () {
        var socio = '@ViewBag.socio';

        var requeridos = $('.required');
        var falla = 0;

        $(requeridos).each(function () {

            var padre = this.parentNode;
            var etiqueta = $(padre).find('label')
            var validador = etiqueta.find('span')[0];

            if ($(this).val() == "" || $(this).val() == "0") {
                $(validador).css("display", "inline")
                falla++
            }
            else {
                $(validador).css("display", "none")
            }
        });

        var archivo = $("#File");
        var fileValidator = $("#fileValidator");
        if (archivo.val() == "") {
            $(fileValidator).css("display", "inline")
            falla++;
        }
        else {
            $(fileValidator).css("display", "none")
        }

        if (falla > 0) {
            return false;
        }
    });
</script>